"use strict";(self.webpackChunktestnewkit=self.webpackChunktestnewkit||[]).push([[667],{"./src/components/Input/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Icons:()=>Icons,Info:()=>Info,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),Heading=__webpack_require__("./src/components/Heading/index.tsx"),Input=__webpack_require__("./src/components/Input/Input.tsx"),index_esm=__webpack_require__("./node_modules/styled-system/dist/index.esm.js"),next_image=__webpack_require__("./node_modules/next/image.js"),image_default=__webpack_require__.n(next_image),Box=__webpack_require__("./src/components/Box/index.tsx"),Text=__webpack_require__("./src/components/Text/index.tsx"),IconComponent=__webpack_require__("./src/components/Svg/IconComponent.tsx"),types=__webpack_require__("./src/components/Input/types.ts"),theme=__webpack_require__("./src/components/Input/theme.ts");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function _templateObject(){var data=_tagged_template_literal(["\n  position: relative;\n  display: block;\n  width: 100%;\n  outline: 0;\n  opacity: ",";\n  cursor: ",";\n"]);return _templateObject=function _templateObject(){return data},data}function _templateObject1(){var data=_tagged_template_literal(["\n  ","\n\n  "," {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n\n    ","\n\n    padding-left: ",";\n    padding-right: ",";\n  }\n"]);return _templateObject1=function _templateObject(){return data},data}function _templateObject2(){var data=_tagged_template_literal(["\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: 2;\n"]);return _templateObject2=function _templateObject(){return data},data}function _templateObject3(){var data=_tagged_template_literal(["\n  ","\n"]);return _templateObject3=function _templateObject(){return data},data}function _templateObject4(){var data=_tagged_template_literal(["\n  left: ",";\n"]);return _templateObject4=function _templateObject(){return data},data}function _templateObject5(){var data=_tagged_template_literal(["\n  ","\n  left: ",";\n"]);return _templateObject5=function _templateObject(){return data},data}function _templateObject6(){var data=_tagged_template_literal(["\n  right: ",";\n"]);return _templateObject6=function _templateObject(){return data},data}function _templateObject7(){var data=_tagged_template_literal(["\n  ","\n"]);return _templateObject7=function _templateObject(){return data},data}var getPadding=function(scale,hasIcon){if(!hasIcon)switch(scale){case types.G.SM:return"12px";case types.G.LG:return"24px";case types.G.MD:default:return"16px"}switch(scale){case types.G.SM:return"36px";case types.G.LG:return"60px";case types.G.MD:default:return"44px"}},getIconPosition=function(scale){switch(scale){case types.G.LG:return"24px";case types.G.MD:return"16px";case types.G.SM:default:return"12px"}},getImageSize=function(scale){switch(scale){case types.G.LG:return 24;case types.G.MD:return 20;case types.G.SM:default:return 16}},StyledInputWrapper=(0,styled_components_browser_esm.Ay)(Box.az)(_templateObject(),(function(param){return param.disabled?".56":"1"}),(function(param){return param.disabled?"not-allowed":"initial"})),StyledInputGroup=(0,styled_components_browser_esm.Ay)(Box.az)(_templateObject1(),(0,index_esm.Ox)({prop:"scale",variants:theme.tb}),Input.A,(0,index_esm.Ox)({prop:"variant",variants:theme.cJ}),(function(param){var hasStartIcon=param.hasStartIcon,scale=param.scale;return getPadding(scale,hasStartIcon)}),(function(param){var hasEndIcon=param.hasEndIcon,scale=param.scale;return getPadding(scale,hasEndIcon)})),iconCss=(0,styled_components_browser_esm.AH)(_templateObject2()),StyledIconComponent=(0,styled_components_browser_esm.Ay)(IconComponent.A)(_templateObject3(),(function(){return iconCss})),LeftIconComponent=(0,styled_components_browser_esm.Ay)(StyledIconComponent)(_templateObject4(),(function(param){var scale=param.scale;return getIconPosition(scale)})),LeftIconImage=(0,styled_components_browser_esm.Ay)(Box.az)(_templateObject5(),(function(){return iconCss}),(function(param){var scale=param.scale;return"".concat(getIconPosition(scale),"px")})),RightIconComponent=(0,styled_components_browser_esm.Ay)(StyledIconComponent)(_templateObject6(),(function(param){var scale=param.scale;return getIconPosition(scale)})),TextDescription=(0,styled_components_browser_esm.Ay)(Text.E)(_templateObject7(),(0,index_esm.Ox)({prop:"variant",variants:theme.fm})),InputGroup=function(_param){var _param_scale=_param.scale,scale=void 0===_param_scale?types.G.MD:_param_scale,startIcon=_param.startIcon,startImage=_param.startImage,endIcon=_param.endIcon,children=_param.children,variant=_param.variant,isError=_param.isError,isWarning=_param.isWarning,disabled=_param.disabled,description=_param.description,_param_baseAwsUrl=_param.baseAwsUrl,baseAwsUrl=void 0===_param_baseAwsUrl?"https://static.biswap.org/bs":_param_baseAwsUrl,props=_object_without_properties(_param,["scale","startIcon","startImage","endIcon","children","variant","isError","isWarning","disabled","description","baseAwsUrl"]);return react.createElement(StyledInputWrapper,function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){_define_property(target,key,source[key])}))}return target}({width:"100%",position:"relative",disabled},props),react.createElement(StyledInputGroup,{scale,variant,width:"100%",position:"relative",hasStartIcon:!!startIcon||!!startImage,hasEndIcon:!!endIcon},startIcon&&react.createElement(LeftIconComponent,{color:startIcon.color,iconName:startIcon.iconName,scale}),startImage&&react.createElement(LeftIconImage,{scale},react.createElement(image_default(),{width:getImageSize(scale),height:getImageSize(scale),src:"".concat(baseAwsUrl).concat(null==startImage?void 0:startImage.imageSrc),alt:"img"})),(0,react.cloneElement)(children,{variant,scale,disabled}),!isError&&!isWarning&&endIcon&&react.createElement(RightIconComponent,{color:endIcon.color,iconName:endIcon.iconName,scale}),isError&&react.createElement(RightIconComponent,{iconName:"CloseCircleSolid",color:"secondary",scale}),isWarning&&react.createElement(RightIconComponent,{iconName:"WarningSolid",color:"warning",scale})),description&&react.createElement(TextDescription,{mt:"4px",fontSize:"12px",variant},description))};const Input_InputGroup=InputGroup;function index_stories_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function index_stories_templateObject(){var data=index_stories_tagged_template_literal(["\n  margin-bottom: 32px;\n\n  & > input + input {\n    margin-left: 16px;\n  }\n"]);return index_stories_templateObject=function _templateObject(){return data},data}function index_stories_templateObject1(){var data=index_stories_tagged_template_literal(["\n  background: ",";\n  padding: 32px 16px;\n"]);return index_stories_templateObject1=function _templateObject(){return data},data}function index_stories_templateObject2(){var data=index_stories_tagged_template_literal(["\n  padding: 32px 16px;\n  background: ",";\n"]);return index_stories_templateObject2=function _templateObject(){return data},data}InputGroup.__docgenInfo={description:"",methods:[],displayName:"InputGroup",props:{scale:{required:!1,tsType:{name:"Scales"},description:"",defaultValue:{value:"Scales.MD",computed:!0}},variant:{required:!1,tsType:{name:"Variants"},description:""},isWarning:{required:!1,tsType:{name:"boolean"},description:""},isError:{required:!1,tsType:{name:"boolean"},description:""},maxWidth:{required:!1,tsType:{name:"string"},description:""},minWidth:{required:!1,tsType:{name:"string"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},startIcon:{required:!1,tsType:{name:"IconProps"},description:""},startImage:{required:!1,tsType:{name:"ImageProps"},description:""},startSizePx:{required:!1,tsType:{name:"number"},description:""},endIcon:{required:!1,tsType:{name:"IconProps"},description:""},children:{required:!0,tsType:{name:"JSX.Element"},description:""},description:{required:!1,tsType:{name:"string"},description:""},baseAwsUrl:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"https://static.biswap.org/bs"',computed:!1}}},composes:["SpaceProps"]};var Row=(0,styled_components_browser_esm.Ay)(Box.so)(index_stories_templateObject()),DarkBg=styled_components_browser_esm.Ay.div(index_stories_templateObject1(),(function(param){return param.theme.colors.backgroundDark})),LightBg=styled_components_browser_esm.Ay.div(index_stories_templateObject2(),(function(param){return param.theme.colors.white}));const index_stories={title:"Components/Input",component:Input.A,argTypes:{}};var Default=function(){return react.createElement(Box.az,null,react.createElement(LightBg,null,react.createElement(Heading.DZ,{mb:"16px",color:"backgroundDark"},"Transparent input"),react.createElement(Row,null,react.createElement(Input.A,{type:"text",scale:types.G.LG,variant:types.l.TRANSPARENT,placeholder:"Transparent input"})),Object.values(types.G).map((function(scale){return react.createElement(react.Fragment,null,react.createElement(Heading.DZ,{mb:"16px",color:"backgroundDark"},scale," light"),react.createElement(Row,null,react.createElement(Input.A,{type:"text",scale,variant:types.l.LIGHT,value:"Value"}),react.createElement(Input.A,{type:"text",scale,variant:types.l.LIGHT,placeholder:"Placeholder..."}),react.createElement(Input.A,{type:"text",scale,variant:types.l.LIGHT,placeholder:"Disabled",disabled:!0}),react.createElement(Input.A,{type:"text",scale,variant:types.l.LIGHT_ERROR,value:"Error"}),react.createElement(Input.A,{type:"text",scale,variant:types.l.LIGHT_WARNING,value:"Warning"})))}))),react.createElement(DarkBg,null,Object.values(types.G).map((function(scale){return react.createElement(react.Fragment,null,react.createElement(Heading.DZ,{mb:"16px",color:"white"},scale," dark"),react.createElement(Row,null,react.createElement(Input.A,{type:"text",scale,variant:types.l.DARK,value:"Value"}),react.createElement(Input.A,{type:"text",scale,variant:types.l.DARK,placeholder:"Placeholder..."}),react.createElement(Input.A,{type:"text",scale,variant:types.l.DARK,placeholder:"Disabled",disabled:!0}),react.createElement(Input.A,{type:"text",scale,variant:types.l.DARK_ERROR,value:"Error"}),react.createElement(Input.A,{type:"text",scale,variant:types.l.DARK_WARNING,value:"Warning"})))}))))},Icons=function(){return react.createElement(react.Fragment,null,react.createElement(LightBg,null,react.createElement(Heading.DZ,{mb:"16px"},"Input group LG"),react.createElement(Row,null,react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.LG,mr:"16px",maxWidth:"300px"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.LG,mr:"16px",maxWidth:"300px"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.LG,mr:"16px",maxWidth:"300px",disabled:!0},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT_WARNING,scale:types.G.LG,mr:"16px",maxWidth:"300px",isWarning:!0},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT_ERROR,scale:types.G.LG,mr:"16px",maxWidth:"300px",isError:!0},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px"},"Input group MD"),react.createElement(Row,null,react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.MD,mr:"16px",maxWidth:"300px"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.MD,mr:"16px",maxWidth:"300px"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.MD,mr:"16px",maxWidth:"300px",disabled:!0},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT_WARNING,scale:types.G.MD,mr:"16px",maxWidth:"300px",isWarning:!0},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT_ERROR,scale:types.G.MD,mr:"16px",maxWidth:"300px",isError:!0},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px"},"Input group SM"),react.createElement(Row,null,react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.SM,mr:"16px",maxWidth:"300px"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.SM,mr:"16px",maxWidth:"300px"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.SM,mr:"16px",maxWidth:"300px",disabled:!0},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT_WARNING,scale:types.G.SM,mr:"16px",maxWidth:"300px",isWarning:!0},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT_ERROR,scale:types.G.SM,mr:"16px",maxWidth:"300px",isError:!0},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px"},"Input group with left(start) icon"),react.createElement(Row,null,react.createElement(Input_InputGroup,{startImage:{imageSrc:"/coins/bsw.svg"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px",disabled:!0},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT_WARNING,scale:types.G.LG,maxWidth:"300px",isWarning:!0},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT_ERROR,scale:types.G.LG,maxWidth:"300px",isError:!0},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px"},"Input group with right(end) icon"),react.createElement(Row,null,react.createElement(Input_InputGroup,{endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px",disabled:!0},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT_WARNING,scale:types.G.LG,maxWidth:"300px",isWarning:!0},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT_ERROR,scale:types.G.LG,maxWidth:"300px",isError:!0},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px"},"Input group with double(start, end) icon"),react.createElement(Row,null,react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px",disabled:!0},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT_WARNING,scale:types.G.LG,maxWidth:"300px",isWarning:!0},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT_ERROR,scale:types.G.LG,maxWidth:"300px",isError:!0},react.createElement(Input.A,{type:"text",value:"isError"})))),react.createElement(DarkBg,null,react.createElement(Heading.DZ,{mb:"16px",color:"white"},"Input group LG"),react.createElement(Row,null,react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.LG,mr:"16px",maxWidth:"300px"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.LG,mr:"16px",maxWidth:"300px"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.LG,mr:"16px",maxWidth:"300px",disabled:!0},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK_WARNING,scale:types.G.LG,mr:"16px",maxWidth:"300px",isWarning:!0},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK_ERROR,scale:types.G.LG,mr:"16px",maxWidth:"300px",isError:!0},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px",color:"white"},"Input group MD"),react.createElement(Row,null,react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.MD,mr:"16px",maxWidth:"300px"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.MD,mr:"16px",maxWidth:"300px"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.MD,mr:"16px",maxWidth:"300px",disabled:!0},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK_WARNING,scale:types.G.MD,mr:"16px",maxWidth:"300px",isWarning:!0},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK_ERROR,scale:types.G.MD,mr:"16px",maxWidth:"300px",isError:!0},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px",color:"white"},"Input group SM"),react.createElement(Row,null,react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.SM,mr:"16px",maxWidth:"300px"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.SM,mr:"16px",maxWidth:"300px"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.SM,mr:"16px",maxWidth:"300px",disabled:!0},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK_WARNING,scale:types.G.SM,mr:"16px",maxWidth:"300px",isWarning:!0},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK_ERROR,scale:types.G.SM,mr:"16px",maxWidth:"300px",isError:!0},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px",color:"white"},"Input group with left(start) icon"),react.createElement(Row,null,react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px",disabled:!0},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK_WARNING,scale:types.G.LG,maxWidth:"300px",isWarning:!0},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK_ERROR,scale:types.G.LG,maxWidth:"300px",isError:!0},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px",color:"white"},"Input group with right(end) icon"),react.createElement(Row,null,react.createElement(Input_InputGroup,{endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px",disabled:!0},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK_WARNING,scale:types.G.LG,maxWidth:"300px",isWarning:!0},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK_ERROR,scale:types.G.LG,maxWidth:"300px",isError:!0},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px",color:"white"},"Input group with double(start, end) icon"),react.createElement(Row,null,react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px",disabled:!0},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK_WARNING,scale:types.G.LG,maxWidth:"300px",isWarning:!0},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},endIcon:{iconName:"EyeOpen",color:"gray"},mb:"24px",mr:"16px",variant:types.l.DARK_ERROR,scale:types.G.LG,maxWidth:"300px",isError:!0},react.createElement(Input.A,{type:"text",value:"isError"})))))},Info=function(){return react.createElement(react.Fragment,null,react.createElement(LightBg,null,react.createElement(Heading.DZ,{mb:"16px"},"Input group LG"),react.createElement(Row,null,react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.LG,mr:"16px",maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.LG,mr:"16px",maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.LG,mr:"16px",maxWidth:"300px",disabled:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT_WARNING,scale:types.G.LG,mr:"16px",maxWidth:"300px",isWarning:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT_ERROR,scale:types.G.LG,mr:"16px",maxWidth:"300px",isError:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px"},"Input group MD"),react.createElement(Row,null,react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.MD,mr:"16px",maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.MD,mr:"16px",maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.MD,mr:"16px",maxWidth:"300px",disabled:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT_WARNING,scale:types.G.MD,mr:"16px",maxWidth:"300px",isWarning:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT_ERROR,scale:types.G.MD,mr:"16px",maxWidth:"300px",isError:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px"},"Input group SM"),react.createElement(Row,null,react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.SM,mr:"16px",maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.SM,mr:"16px",maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT,scale:types.G.SM,mr:"16px",maxWidth:"300px",disabled:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT_WARNING,scale:types.G.SM,mr:"16px",maxWidth:"300px",isWarning:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.LIGHT_ERROR,scale:types.G.SM,mr:"16px",maxWidth:"300px",isError:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px"},"Input group with left(start) icon"),react.createElement(Row,null,react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px",disabled:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT_WARNING,scale:types.G.LG,maxWidth:"300px",isWarning:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT_ERROR,scale:types.G.LG,maxWidth:"300px",isError:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px"},"Input group with right(end) icon"),react.createElement(Row,null,react.createElement(Input_InputGroup,{endIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px",disabled:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT_WARNING,scale:types.G.LG,maxWidth:"300px",isWarning:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT_ERROR,scale:types.G.LG,maxWidth:"300px",isError:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px"},"Input group with double(start, end) icon"),react.createElement(Row,null,react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"gray"},endIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"gray"},endIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"gray"},endIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px",disabled:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"gray"},endIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT_WARNING,scale:types.G.LG,maxWidth:"300px",isWarning:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"gray"},endIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT_ERROR,scale:types.G.LG,maxWidth:"300px",isError:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px"},"Input group with labels"),react.createElement(Row,null,react.createElement(Input_InputGroup,{endIcon:{iconName:"EditSolid",color:"gray"},mb:"24px",mr:"16px",variant:types.l.LIGHT,scale:types.G.LG,maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})))),react.createElement(DarkBg,null,react.createElement(Heading.DZ,{mb:"16px",color:"white"},"Input group LG"),react.createElement(Row,null,react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.LG,mr:"16px",maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.LG,mr:"16px",maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.LG,mr:"16px",maxWidth:"300px",disabled:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK_WARNING,scale:types.G.LG,mr:"16px",maxWidth:"300px",isWarning:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK_ERROR,scale:types.G.LG,mr:"16px",maxWidth:"300px",isError:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px",color:"white"},"Input group MD"),react.createElement(Row,null,react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.MD,mr:"16px",maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.MD,mr:"16px",maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.MD,mr:"16px",maxWidth:"300px",disabled:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK_WARNING,scale:types.G.MD,mr:"16px",maxWidth:"300px",isWarning:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK_ERROR,scale:types.G.MD,mr:"16px",maxWidth:"300px",isError:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px",color:"white"},"Input group SM"),react.createElement(Row,null,react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.SM,mr:"16px",maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.SM,mr:"16px",maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK,scale:types.G.SM,mr:"16px",maxWidth:"300px",disabled:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK_WARNING,scale:types.G.SM,mr:"16px",maxWidth:"300px",isWarning:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{mb:"24px",variant:types.l.DARK_ERROR,scale:types.G.SM,mr:"16px",maxWidth:"300px",isError:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px",color:"white"},"Input group with left(start) icon"),react.createElement(Row,null,react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px",disabled:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK_WARNING,scale:types.G.LG,maxWidth:"300px",isWarning:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK_ERROR,scale:types.G.LG,maxWidth:"300px",isError:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px",color:"white"},"Input group with right(end) icon"),react.createElement(Row,null,react.createElement(Input_InputGroup,{endIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px",disabled:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK_WARNING,scale:types.G.LG,maxWidth:"300px",isWarning:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{endIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK_ERROR,scale:types.G.LG,maxWidth:"300px",isError:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isError"}))),react.createElement(Heading.DZ,{mb:"16px",color:"white"},"Input group with double(start, end) icon"),react.createElement(Row,null,react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"white"},endIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"placeholder"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"white"},endIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px",description:"Helper text"},react.createElement(Input.A,{type:"text",value:"value"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"white"},endIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK,scale:types.G.LG,maxWidth:"300px",disabled:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",placeholder:"disabled"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"white"},endIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK_WARNING,scale:types.G.LG,maxWidth:"300px",isWarning:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isWarning"})),react.createElement(Input_InputGroup,{startIcon:{iconName:"EyeOpen",color:"white"},endIcon:{iconName:"EditSolid",color:"white"},mb:"24px",mr:"16px",variant:types.l.DARK_ERROR,scale:types.G.LG,maxWidth:"300px",isError:!0,description:"Helper text"},react.createElement(Input.A,{type:"text",value:"isError"})))))};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'() => {\n  return <Box>\n      <LightBg>\n        <Heading mb="16px" color="backgroundDark">\n          Transparent input\n        </Heading>\n        <Row>\n          <Input type="text" scale={Scales.LG} variant={Variants.TRANSPARENT} placeholder="Transparent input" />\n        </Row>\n        {Object.values(Scales).map(scale => <>\n            <Heading mb="16px" color="backgroundDark">\n              {scale} light\n            </Heading>\n            <Row>\n              <Input type="text" scale={scale} variant={Variants.LIGHT} value="Value" />\n              <Input type="text" scale={scale} variant={Variants.LIGHT} placeholder="Placeholder..." />\n              <Input type="text" scale={scale} variant={Variants.LIGHT} placeholder="Disabled" disabled />\n              <Input type="text" scale={scale} variant={Variants.LIGHT_ERROR} value="Error" />\n              <Input type="text" scale={scale} variant={Variants.LIGHT_WARNING} value="Warning" />\n            </Row>\n          </>)}\n      </LightBg>\n\n      <DarkBg>\n        {Object.values(Scales).map(scale => <>\n            <Heading mb="16px" color="white">\n              {scale} dark\n            </Heading>\n            <Row>\n              <Input type="text" scale={scale} variant={Variants.DARK} value="Value" />\n              <Input type="text" scale={scale} variant={Variants.DARK} placeholder="Placeholder..." />\n              <Input type="text" scale={scale} variant={Variants.DARK} placeholder="Disabled" disabled />\n              <Input type="text" scale={scale} variant={Variants.DARK_ERROR} value="Error" />\n              <Input type="text" scale={scale} variant={Variants.DARK_WARNING} value="Warning" />\n            </Row>\n          </>)}\n      </DarkBg>\n    </Box>;\n}',...Default.parameters?.docs?.source}}},Icons.parameters={...Icons.parameters,docs:{...Icons.parameters?.docs,source:{originalSource:'() => {\n  return <>\n      <LightBg>\n        <Heading mb="16px">Input group LG</Heading>\n        <Row>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.LG} mr="16px" maxWidth="300px">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.LG} mr="16px" maxWidth="300px">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.LG} mr="16px" maxWidth="300px" disabled>\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT_WARNING} scale={Scales.LG} mr="16px" maxWidth="300px" isWarning>\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT_ERROR} scale={Scales.LG} mr="16px" maxWidth="300px" isError>\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px">Input group MD</Heading>\n        <Row>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.MD} mr="16px" maxWidth="300px">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.MD} mr="16px" maxWidth="300px">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.MD} mr="16px" maxWidth="300px" disabled>\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT_WARNING} scale={Scales.MD} mr="16px" maxWidth="300px" isWarning>\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT_ERROR} scale={Scales.MD} mr="16px" maxWidth="300px" isError>\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px">Input group SM</Heading>\n        <Row>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.SM} mr="16px" maxWidth="300px">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.SM} mr="16px" maxWidth="300px">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.SM} mr="16px" maxWidth="300px" disabled>\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT_WARNING} scale={Scales.SM} mr="16px" maxWidth="300px" isWarning>\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT_ERROR} scale={Scales.SM} mr="16px" maxWidth="300px" isError>\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px">Input group with left(start) icon</Heading>\n        <Row>\n          <InputGroup startImage={{\n          imageSrc: "/coins/bsw.svg"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px" disabled>\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT_WARNING} scale={Scales.LG} maxWidth="300px" isWarning>\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT_ERROR} scale={Scales.LG} maxWidth="300px" isError>\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px">Input group with right(end) icon</Heading>\n        <Row>\n          <InputGroup endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px" disabled>\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT_WARNING} scale={Scales.LG} maxWidth="300px" isWarning>\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT_ERROR} scale={Scales.LG} maxWidth="300px" isError>\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px">Input group with double(start, end) icon</Heading>\n        <Row>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px" disabled>\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT_WARNING} scale={Scales.LG} maxWidth="300px" isWarning>\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT_ERROR} scale={Scales.LG} maxWidth="300px" isError>\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n      </LightBg>\n\n      <DarkBg>\n        <Heading mb="16px" color="white">\n          Input group LG\n        </Heading>\n        <Row>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.LG} mr="16px" maxWidth="300px">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.LG} mr="16px" maxWidth="300px">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.LG} mr="16px" maxWidth="300px" disabled>\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK_WARNING} scale={Scales.LG} mr="16px" maxWidth="300px" isWarning>\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK_ERROR} scale={Scales.LG} mr="16px" maxWidth="300px" isError>\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px" color="white">\n          Input group MD\n        </Heading>\n        <Row>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.MD} mr="16px" maxWidth="300px">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.MD} mr="16px" maxWidth="300px">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.MD} mr="16px" maxWidth="300px" disabled>\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK_WARNING} scale={Scales.MD} mr="16px" maxWidth="300px" isWarning>\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK_ERROR} scale={Scales.MD} mr="16px" maxWidth="300px" isError>\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px" color="white">\n          Input group SM\n        </Heading>\n        <Row>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.SM} mr="16px" maxWidth="300px">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.SM} mr="16px" maxWidth="300px">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.SM} mr="16px" maxWidth="300px" disabled>\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK_WARNING} scale={Scales.SM} mr="16px" maxWidth="300px" isWarning>\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK_ERROR} scale={Scales.SM} mr="16px" maxWidth="300px" isError>\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px" color="white">\n          Input group with left(start) icon\n        </Heading>\n        <Row>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px" disabled>\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK_WARNING} scale={Scales.LG} maxWidth="300px" isWarning>\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK_ERROR} scale={Scales.LG} maxWidth="300px" isError>\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px" color="white">\n          Input group with right(end) icon\n        </Heading>\n        <Row>\n          <InputGroup endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px" disabled>\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK_WARNING} scale={Scales.LG} maxWidth="300px" isWarning>\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK_ERROR} scale={Scales.LG} maxWidth="300px" isError>\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px" color="white">\n          Input group with double(start, end) icon\n        </Heading>\n        <Row>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px" disabled>\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK_WARNING} scale={Scales.LG} maxWidth="300px" isWarning>\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.DARK_ERROR} scale={Scales.LG} maxWidth="300px" isError>\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n      </DarkBg>\n    </>;\n}',...Icons.parameters?.docs?.source}}},Info.parameters={...Info.parameters,docs:{...Info.parameters?.docs,source:{originalSource:'() => {\n  return <>\n      <LightBg>\n        <Heading mb="16px">Input group LG</Heading>\n        <Row>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.LG} mr="16px" maxWidth="300px" description="Helper text">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.LG} mr="16px" maxWidth="300px" description="Helper text">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.LG} mr="16px" maxWidth="300px" disabled description="Helper text">\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT_WARNING} scale={Scales.LG} mr="16px" maxWidth="300px" isWarning description="Helper text">\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT_ERROR} scale={Scales.LG} mr="16px" maxWidth="300px" isError description="Helper text">\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px">Input group MD</Heading>\n        <Row>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.MD} mr="16px" maxWidth="300px" description="Helper text">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.MD} mr="16px" maxWidth="300px" description="Helper text">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.MD} mr="16px" maxWidth="300px" disabled description="Helper text">\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT_WARNING} scale={Scales.MD} mr="16px" maxWidth="300px" isWarning description="Helper text">\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT_ERROR} scale={Scales.MD} mr="16px" maxWidth="300px" isError description="Helper text">\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px">Input group SM</Heading>\n        <Row>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.SM} mr="16px" maxWidth="300px" description="Helper text">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.SM} mr="16px" maxWidth="300px" description="Helper text">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT} scale={Scales.SM} mr="16px" maxWidth="300px" disabled description="Helper text">\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT_WARNING} scale={Scales.SM} mr="16px" maxWidth="300px" isWarning description="Helper text">\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.LIGHT_ERROR} scale={Scales.SM} mr="16px" maxWidth="300px" isError description="Helper text">\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px">Input group with left(start) icon</Heading>\n        <Row>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px" description="Helper text">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px" description="Helper text">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px" disabled description="Helper text">\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT_WARNING} scale={Scales.LG} maxWidth="300px" isWarning description="Helper text">\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT_ERROR} scale={Scales.LG} maxWidth="300px" isError description="Helper text">\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px">Input group with right(end) icon</Heading>\n        <Row>\n          <InputGroup endIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px" description="Helper text">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px" description="Helper text">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px" disabled description="Helper text">\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT_WARNING} scale={Scales.LG} maxWidth="300px" isWarning description="Helper text">\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT_ERROR} scale={Scales.LG} maxWidth="300px" isError description="Helper text">\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px">Input group with double(start, end) icon</Heading>\n        <Row>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px" description="Helper text">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px" description="Helper text">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px" disabled description="Helper text">\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT_WARNING} scale={Scales.LG} maxWidth="300px" isWarning description="Helper text">\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "gray"\n        }} endIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT_ERROR} scale={Scales.LG} maxWidth="300px" isError description="Helper text">\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px">Input group with labels</Heading>\n        <Row>\n          <InputGroup endIcon={{\n          iconName: "EditSolid",\n          color: "gray"\n        }} mb="24px" mr="16px" variant={Variants.LIGHT} scale={Scales.LG} maxWidth="300px" description="Helper text">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n        </Row>\n      </LightBg>\n\n      <DarkBg>\n        <Heading mb="16px" color="white">\n          Input group LG\n        </Heading>\n        <Row>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.LG} mr="16px" maxWidth="300px" description="Helper text">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.LG} mr="16px" maxWidth="300px" description="Helper text">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.LG} mr="16px" maxWidth="300px" disabled description="Helper text">\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK_WARNING} scale={Scales.LG} mr="16px" maxWidth="300px" isWarning description="Helper text">\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK_ERROR} scale={Scales.LG} mr="16px" maxWidth="300px" isError description="Helper text">\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px" color="white">\n          Input group MD\n        </Heading>\n        <Row>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.MD} mr="16px" maxWidth="300px" description="Helper text">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.MD} mr="16px" maxWidth="300px" description="Helper text">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.MD} mr="16px" maxWidth="300px" disabled description="Helper text">\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK_WARNING} scale={Scales.MD} mr="16px" maxWidth="300px" isWarning description="Helper text">\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK_ERROR} scale={Scales.MD} mr="16px" maxWidth="300px" isError description="Helper text">\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px" color="white">\n          Input group SM\n        </Heading>\n        <Row>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.SM} mr="16px" maxWidth="300px" description="Helper text">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.SM} mr="16px" maxWidth="300px" description="Helper text">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK} scale={Scales.SM} mr="16px" maxWidth="300px" disabled description="Helper text">\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK_WARNING} scale={Scales.SM} mr="16px" maxWidth="300px" isWarning description="Helper text">\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup mb="24px" variant={Variants.DARK_ERROR} scale={Scales.SM} mr="16px" maxWidth="300px" isError description="Helper text">\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px" color="white">\n          Input group with left(start) icon\n        </Heading>\n        <Row>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px" description="Helper text">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px" description="Helper text">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px" disabled description="Helper text">\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK_WARNING} scale={Scales.LG} maxWidth="300px" isWarning description="Helper text">\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK_ERROR} scale={Scales.LG} maxWidth="300px" isError description="Helper text">\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px" color="white">\n          Input group with right(end) icon\n        </Heading>\n        <Row>\n          <InputGroup endIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px" description="Helper text">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px" description="Helper text">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px" disabled description="Helper text">\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK_WARNING} scale={Scales.LG} maxWidth="300px" isWarning description="Helper text">\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup endIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK_ERROR} scale={Scales.LG} maxWidth="300px" isError description="Helper text">\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n\n        <Heading mb="16px" color="white">\n          Input group with double(start, end) icon\n        </Heading>\n        <Row>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "white"\n        }} endIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px" description="Helper text">\n            <Input type="text" placeholder="placeholder" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "white"\n        }} endIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px" description="Helper text">\n            <Input type="text" value="value" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "white"\n        }} endIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK} scale={Scales.LG} maxWidth="300px" disabled description="Helper text">\n            <Input type="text" placeholder="disabled" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "white"\n        }} endIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK_WARNING} scale={Scales.LG} maxWidth="300px" isWarning description="Helper text">\n            <Input type="text" value="isWarning" />\n          </InputGroup>\n          <InputGroup startIcon={{\n          iconName: "EyeOpen",\n          color: "white"\n        }} endIcon={{\n          iconName: "EditSolid",\n          color: "white"\n        }} mb="24px" mr="16px" variant={Variants.DARK_ERROR} scale={Scales.LG} maxWidth="300px" isError description="Helper text">\n            <Input type="text" value="isError" />\n          </InputGroup>\n        </Row>\n      </DarkBg>\n    </>;\n}',...Info.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Icons","Info"]},"./src/components/Heading/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{DZ:()=>_Heading__WEBPACK_IMPORTED_MODULE_0__.A});var _Heading__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/Heading/Heading.tsx");__webpack_require__("./src/components/Heading/types.ts")},"./src/components/Input/Input.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),styled_system__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/styled-system/dist/index.esm.js"),_theme__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Input/theme.ts");function _templateObject(){var data=function _tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}(["\n  display: block;\n  width: 100%;\n  max-width: ",";\n  min-width: ",";\n  border-width: 1px;\n  border-style: solid;\n  border-color: transparent;\n  outline: 0;\n  color: ",";\n  opacity: ",";\n  cursor: ",";\n  transition:\n    border-color 0.4s ease,\n    background-color 0.4s ease,\n    color 0.4s ease;\n\n  ","\n\n  ","\n"]);return _templateObject=function _templateObject(){return data},data}const __WEBPACK_DEFAULT_EXPORT__=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.input(_templateObject(),(function(param){return param.maxWidth||"none"}),(function(param){return param.minWidth||"0"}),(function(param){return param.theme.colors.gray900}),(function(param){return param.disabled?".56":"1"}),(function(param){return param.disabled?"not-allowed":"initial"}),(0,styled_system__WEBPACK_IMPORTED_MODULE_0__.Ox)({prop:"scale",variants:_theme__WEBPACK_IMPORTED_MODULE_1__.tb}),(0,styled_system__WEBPACK_IMPORTED_MODULE_0__.Ox)({prop:"variant",variants:_theme__WEBPACK_IMPORTED_MODULE_1__.cJ}))},"./src/components/Input/theme.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cJ:()=>styleVariants,fm:()=>styleTextVariants,tb:()=>scaleVariants});var _obj,_types__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/Input/types.ts");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var _obj1,_obj2,scaleVariants=(_define_property(_obj={},_types__WEBPACK_IMPORTED_MODULE_0__.G.LG,{borderRadius:"10px",height:"48px",fontSize:"16px",padding:"0 24px",svg:{width:"24px"}}),_define_property(_obj,_types__WEBPACK_IMPORTED_MODULE_0__.G.MD,{borderRadius:"8px",height:"40px",fontSize:"14px",padding:"0 16px",svg:{width:"20px"}}),_define_property(_obj,_types__WEBPACK_IMPORTED_MODULE_0__.G.SM,{borderRadius:"8px",height:"32px",fontSize:"12px",padding:"0 12px",svg:{width:"16px"}}),_obj),styleVariants=(_define_property(_obj1={},_types__WEBPACK_IMPORTED_MODULE_0__.l.LIGHT,{backgroundColor:"gray300",color:"dark800","::placeholder":{color:"gray900"},":hover:not(:disabled)":{borderColor:"gray500",backgroundColor:"transparent",color:"dark800"},":focus:not(:disabled)":{borderColor:"primary",backgroundColor:"transparent",color:"dark800"}}),_define_property(_obj1,_types__WEBPACK_IMPORTED_MODULE_0__.l.LIGHT_WARNING,{borderColor:"warning",backgroundColor:"transparent",color:"dark800","::placeholder":{color:"dark800"}}),_define_property(_obj1,_types__WEBPACK_IMPORTED_MODULE_0__.l.LIGHT_ERROR,{borderColor:"secondary",backgroundColor:"transparent",color:"dark800","::placeholder":{color:"dark800"}}),_define_property(_obj1,_types__WEBPACK_IMPORTED_MODULE_0__.l.DARK,{backgroundColor:"dark500",color:"white","::placeholder":{color:"pastelBlue"},":hover:not(:disabled)":{borderColor:"dark300",backgroundColor:"transparent",color:"white"},":focus:not(:disabled)":{borderColor:"primary",backgroundColor:"transparent",color:"white"}}),_define_property(_obj1,_types__WEBPACK_IMPORTED_MODULE_0__.l.DARK_WARNING,{borderColor:"warning",backgroundColor:"transparent",color:"white","::placeholder":{color:"white"}}),_define_property(_obj1,_types__WEBPACK_IMPORTED_MODULE_0__.l.DARK_ERROR,{borderColor:"secondary",backgroundColor:"transparent",color:"white","::placeholder":{color:"white"}}),_define_property(_obj1,_types__WEBPACK_IMPORTED_MODULE_0__.l.TRANSPARENT,{backgroundColor:"transparent",color:"dark800","::placeholder":{color:"gray900"},":hover:not(:disabled)":{borderColor:"transparent",backgroundColor:"transparent",color:"dark800"},":focus:not(:disabled)":{borderColor:"transparent",backgroundColor:"transparent",color:"dark800"}}),_obj1),styleTextVariants=(_define_property(_obj2={},_types__WEBPACK_IMPORTED_MODULE_0__.l.LIGHT,{color:"gray700"}),_define_property(_obj2,_types__WEBPACK_IMPORTED_MODULE_0__.l.LIGHT_WARNING,{color:"warning"}),_define_property(_obj2,_types__WEBPACK_IMPORTED_MODULE_0__.l.LIGHT_ERROR,{color:"secondary"}),_define_property(_obj2,_types__WEBPACK_IMPORTED_MODULE_0__.l.DARK,{color:"white"}),_define_property(_obj2,_types__WEBPACK_IMPORTED_MODULE_0__.l.DARK_WARNING,{color:"warning"}),_define_property(_obj2,_types__WEBPACK_IMPORTED_MODULE_0__.l.DARK_ERROR,{color:"secondary"}),_define_property(_obj2,_types__WEBPACK_IMPORTED_MODULE_0__.l.TRANSPARENT,{color:"dark800"}),_obj2)},"./src/components/Input/types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var Scales,Variants;__webpack_require__.d(__webpack_exports__,{G:()=>Scales,l:()=>Variants}),function(Scales){Scales.SM="sm",Scales.MD="md",Scales.LG="lg"}(Scales||(Scales={})),function(Variants){Variants.LIGHT="light",Variants.LIGHT_WARNING="lightWarning",Variants.LIGHT_ERROR="lightError",Variants.DARK="dark",Variants.DARK_WARNING="darkWarning",Variants.DARK_ERROR="darkError",Variants.TRANSPARENT="transparent"}(Variants||(Variants={}))},"./src/components/Svg/IconComponent.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Icons=__webpack_require__("./src/components/Svg/index.tsx"),IconComponent=function(_param){var iconName=_param.iconName,props=_object_without_properties(_param,["iconName"]),IconElement=Icons["".concat(iconName,"Icon")];return IconElement?react__WEBPACK_IMPORTED_MODULE_0__.createElement(IconElement,props):null};const __WEBPACK_DEFAULT_EXPORT__=IconComponent;IconComponent.__docgenInfo={description:"",methods:[],displayName:"IconComponent",props:{iconName:{required:!0,tsType:{name:"string"},description:""},theme:{required:!1,tsType:{name:"DefaultTheme"},description:""},spin:{required:!1,tsType:{name:"boolean"},description:""}},composes:["SVGAttributes","SpaceProps"]}},"./src/components/Text/TooltipText.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var styled_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_Text__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/Text/Text.tsx");function _templateObject(){var data=function _tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}(["\n  text-decoration: ",";\n  text-underline-offset: 0.1em;\n"]);return _templateObject=function _templateObject(){return data},data}const __WEBPACK_DEFAULT_EXPORT__=(0,styled_components__WEBPACK_IMPORTED_MODULE_1__.Ay)(_Text__WEBPACK_IMPORTED_MODULE_0__.A)(_templateObject(),(function(param){var theme=param.theme;return"underline dotted ".concat(theme.colors.pastelBlue)}))},"./src/components/Text/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>_Text__WEBPACK_IMPORTED_MODULE_0__.A});var _Text__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/Text/Text.tsx");__webpack_require__("./src/components/Text/TooltipText.tsx")}}]);